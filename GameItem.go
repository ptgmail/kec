// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package main

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// GameitemMetaData contains all meta data concerning the Gameitem contract.
var GameitemMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"awardItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f47616d654974656d0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f49544d0000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000b8565b508060019080519060200190620000af929190620000b8565b505050620001cd565b828054620000c69062000197565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001b057607f821691505b60208210811415620001c757620001c662000168565b5b50919050565b612b9680620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde1461025b578063c87b56dd14610277578063cf378343146102a7578063e985e9c5146102d7576100ea565b806370a08231146101f157806395d89b4114610221578063a22cb4651461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a55780636352211e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906118f8565b610307565b6040516101169190611940565b60405180910390f35b6101276103e9565b60405161013491906119f4565b60405180910390f35b61015760048036038101906101529190611a4c565b61047b565b6040516101649190611aba565b60405180910390f35b61018760048036038101906101829190611b01565b610500565b005b6101a3600480360381019061019e9190611b41565b610618565b005b6101bf60048036038101906101ba9190611b41565b610678565b005b6101db60048036038101906101d69190611a4c565b610698565b6040516101e89190611aba565b60405180910390f35b61020b60048036038101906102069190611b94565b61074a565b6040516102189190611bd0565b60405180910390f35b610229610802565b60405161023691906119f4565b60405180910390f35b61025960048036038101906102549190611c17565b610894565b005b61027560048036038101906102709190611d8c565b6108aa565b005b610291600480360381019061028c9190611a4c565b61090c565b60405161029e91906119f4565b60405180910390f35b6102c160048036038101906102bc9190611eb0565b610a5e565b6040516102ce9190611bd0565b60405180910390f35b6102f160048036038101906102ec9190611f0c565b610a96565b6040516102fe9190611940565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e257506103e182610b2a565b5b9050919050565b6060600080546103f890611f7b565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611f7b565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b5050505050905090565b600061048682610b94565b6104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc9061201f565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050b82610698565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610573906120b1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059b610c00565b73ffffffffffffffffffffffffffffffffffffffff1614806105ca57506105c9816105c4610c00565b610a96565b5b610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060090612143565b60405180910390fd5b6106138383610c08565b505050565b610629610623610c00565b82610cc1565b610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f906121d5565b60405180910390fd5b610673838383610d9f565b505050565b610693838383604051806020016040528060008152506108aa565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073890612267565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b2906122f9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461081190611f7b565b80601f016020809104026020016040519081016040528092919081815260200182805461083d90611f7b565b801561088a5780601f1061085f5761010080835404028352916020019161088a565b820191906000526020600020905b81548152906001019060200180831161086d57829003601f168201915b5050505050905090565b6108a661089f610c00565b8383610ffb565b5050565b6108bb6108b5610c00565b83610cc1565b6108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f1906121d5565b60405180910390fd5b61090684848484611168565b50505050565b606061091782610b94565b610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094d9061238b565b60405180910390fd5b600060066000848152602001908152602001600020805461097690611f7b565b80601f01602080910402602001604051908101604052809291908181526020018280546109a290611f7b565b80156109ef5780601f106109c4576101008083540402835291602001916109ef565b820191906000526020600020905b8154815290600101906020018083116109d257829003601f168201915b505050505090506000610a006111c4565b9050600081511415610a16578192505050610a59565b600082511115610a4b578082604051602001610a339291906123e7565b60405160208183030381529060405292505050610a59565b610a54846111db565b925050505b919050565b6000610a6a6007611282565b6000610a766007611298565b9050610a8284826112a6565b610a8c8184611474565b8091505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610c7b83610698565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610ccc82610b94565b610d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d029061247d565b60405180910390fd5b6000610d1683610698565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d8557508373ffffffffffffffffffffffffffffffffffffffff16610d6d8461047b565b73ffffffffffffffffffffffffffffffffffffffff16145b80610d965750610d958185610a96565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610dbf82610698565b73ffffffffffffffffffffffffffffffffffffffff1614610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c9061250f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7c906125a1565b60405180910390fd5b610e908383836114e8565b610e9b600082610c08565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eeb91906125f0565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f429190612624565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561106a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611061906126c6565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161115b9190611940565b60405180910390a3505050565b611173848484610d9f565b61117f848484846114ed565b6111be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b590612758565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606111e682610b94565b611225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121c906127ea565b60405180910390fd5b600061122f6111c4565b9050600081511161124f576040518060200160405280600081525061127a565b8061125984611675565b60405160200161126a9291906123e7565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130d90612856565b60405180910390fd5b61131f81610b94565b1561135f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611356906128c2565b60405180910390fd5b61136b600083836114e8565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113bb9190612624565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b61147d82610b94565b6114bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b390612954565b60405180910390fd5b806006600084815260200190815260200160002090805190602001906114e39291906117e9565b505050565b505050565b600061150e8473ffffffffffffffffffffffffffffffffffffffff166117d6565b15611668578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611537610c00565b8786866040518563ffffffff1660e01b815260040161155994939291906129c9565b6020604051808303816000875af192505050801561159557506040513d601f19601f820116820180604052508101906115929190612a2a565b60015b611618573d80600081146115c5576040519150601f19603f3d011682016040523d82523d6000602084013e6115ca565b606091505b50600081511415611610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160790612758565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061166d565b600190505b949350505050565b606060008214156116bd576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506117d1565b600082905060005b600082146116ef5780806116d890612a57565b915050600a826116e89190612acf565b91506116c5565b60008167ffffffffffffffff81111561170b5761170a611c61565b5b6040519080825280601f01601f19166020018201604052801561173d5781602001600182028036833780820191505090505b5090505b600085146117ca5760018261175691906125f0565b9150600a856117659190612b00565b60306117719190612624565b60f81b81838151811061178757611786612b31565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856117c39190612acf565b9450611741565b8093505050505b919050565b600080823b905060008111915050919050565b8280546117f590611f7b565b90600052602060002090601f016020900481019282611817576000855561185e565b82601f1061183057805160ff191683800117855561185e565b8280016001018555821561185e579182015b8281111561185d578251825591602001919060010190611842565b5b50905061186b919061186f565b5090565b5b80821115611888576000816000905550600101611870565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118d5816118a0565b81146118e057600080fd5b50565b6000813590506118f2816118cc565b92915050565b60006020828403121561190e5761190d611896565b5b600061191c848285016118e3565b91505092915050565b60008115159050919050565b61193a81611925565b82525050565b60006020820190506119556000830184611931565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561199557808201518184015260208101905061197a565b838111156119a4576000848401525b50505050565b6000601f19601f8301169050919050565b60006119c68261195b565b6119d08185611966565b93506119e0818560208601611977565b6119e9816119aa565b840191505092915050565b60006020820190508181036000830152611a0e81846119bb565b905092915050565b6000819050919050565b611a2981611a16565b8114611a3457600080fd5b50565b600081359050611a4681611a20565b92915050565b600060208284031215611a6257611a61611896565b5b6000611a7084828501611a37565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611aa482611a79565b9050919050565b611ab481611a99565b82525050565b6000602082019050611acf6000830184611aab565b92915050565b611ade81611a99565b8114611ae957600080fd5b50565b600081359050611afb81611ad5565b92915050565b60008060408385031215611b1857611b17611896565b5b6000611b2685828601611aec565b9250506020611b3785828601611a37565b9150509250929050565b600080600060608486031215611b5a57611b59611896565b5b6000611b6886828701611aec565b9350506020611b7986828701611aec565b9250506040611b8a86828701611a37565b9150509250925092565b600060208284031215611baa57611ba9611896565b5b6000611bb884828501611aec565b91505092915050565b611bca81611a16565b82525050565b6000602082019050611be56000830184611bc1565b92915050565b611bf481611925565b8114611bff57600080fd5b50565b600081359050611c1181611beb565b92915050565b60008060408385031215611c2e57611c2d611896565b5b6000611c3c85828601611aec565b9250506020611c4d85828601611c02565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c99826119aa565b810181811067ffffffffffffffff82111715611cb857611cb7611c61565b5b80604052505050565b6000611ccb61188c565b9050611cd78282611c90565b919050565b600067ffffffffffffffff821115611cf757611cf6611c61565b5b611d00826119aa565b9050602081019050919050565b82818337600083830152505050565b6000611d2f611d2a84611cdc565b611cc1565b905082815260208101848484011115611d4b57611d4a611c5c565b5b611d56848285611d0d565b509392505050565b600082601f830112611d7357611d72611c57565b5b8135611d83848260208601611d1c565b91505092915050565b60008060008060808587031215611da657611da5611896565b5b6000611db487828801611aec565b9450506020611dc587828801611aec565b9350506040611dd687828801611a37565b925050606085013567ffffffffffffffff811115611df757611df661189b565b5b611e0387828801611d5e565b91505092959194509250565b600067ffffffffffffffff821115611e2a57611e29611c61565b5b611e33826119aa565b9050602081019050919050565b6000611e53611e4e84611e0f565b611cc1565b905082815260208101848484011115611e6f57611e6e611c5c565b5b611e7a848285611d0d565b509392505050565b600082601f830112611e9757611e96611c57565b5b8135611ea7848260208601611e40565b91505092915050565b60008060408385031215611ec757611ec6611896565b5b6000611ed585828601611aec565b925050602083013567ffffffffffffffff811115611ef657611ef561189b565b5b611f0285828601611e82565b9150509250929050565b60008060408385031215611f2357611f22611896565b5b6000611f3185828601611aec565b9250506020611f4285828601611aec565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f9357607f821691505b60208210811415611fa757611fa6611f4c565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000612009602c83611966565b915061201482611fad565b604082019050919050565b6000602082019050818103600083015261203881611ffc565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061209b602183611966565b91506120a68261203f565b604082019050919050565b600060208201905081810360008301526120ca8161208e565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b600061212d603883611966565b9150612138826120d1565b604082019050919050565b6000602082019050818103600083015261215c81612120565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b60006121bf603183611966565b91506121ca82612163565b604082019050919050565b600060208201905081810360008301526121ee816121b2565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b6000612251602983611966565b915061225c826121f5565b604082019050919050565b6000602082019050818103600083015261228081612244565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006122e3602a83611966565b91506122ee82612287565b604082019050919050565b60006020820190508181036000830152612312816122d6565b9050919050565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b6000612375603183611966565b915061238082612319565b604082019050919050565b600060208201905081810360008301526123a481612368565b9050919050565b600081905092915050565b60006123c18261195b565b6123cb81856123ab565b93506123db818560208601611977565b80840191505092915050565b60006123f382856123b6565b91506123ff82846123b6565b91508190509392505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000612467602c83611966565b91506124728261240b565b604082019050919050565b600060208201905081810360008301526124968161245a565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b60006124f9602983611966565b91506125048261249d565b604082019050919050565b60006020820190508181036000830152612528816124ec565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061258b602483611966565b91506125968261252f565b604082019050919050565b600060208201905081810360008301526125ba8161257e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125fb82611a16565b915061260683611a16565b925082821015612619576126186125c1565b5b828203905092915050565b600061262f82611a16565b915061263a83611a16565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561266f5761266e6125c1565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006126b0601983611966565b91506126bb8261267a565b602082019050919050565b600060208201905081810360008301526126df816126a3565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612742603283611966565b915061274d826126e6565b604082019050919050565b6000602082019050818103600083015261277181612735565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b60006127d4602f83611966565b91506127df82612778565b604082019050919050565b60006020820190508181036000830152612803816127c7565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612840602083611966565b915061284b8261280a565b602082019050919050565b6000602082019050818103600083015261286f81612833565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b60006128ac601c83611966565b91506128b782612876565b602082019050919050565b600060208201905081810360008301526128db8161289f565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b600061293e602e83611966565b9150612949826128e2565b604082019050919050565b6000602082019050818103600083015261296d81612931565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061299b82612974565b6129a5818561297f565b93506129b5818560208601611977565b6129be816119aa565b840191505092915050565b60006080820190506129de6000830187611aab565b6129eb6020830186611aab565b6129f86040830185611bc1565b8181036060830152612a0a8184612990565b905095945050505050565b600081519050612a24816118cc565b92915050565b600060208284031215612a4057612a3f611896565b5b6000612a4e84828501612a15565b91505092915050565b6000612a6282611a16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a9557612a946125c1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612ada82611a16565b9150612ae583611a16565b925082612af557612af4612aa0565b5b828204905092915050565b6000612b0b82611a16565b9150612b1683611a16565b925082612b2657612b25612aa0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220a42100ce21f22cb8c97883dc18a44e94d5ac9b50b9b556d0c83f558fa13f0e0e64736f6c634300080a0033",
}

// GameitemABI is the input ABI used to generate the binding from.
// Deprecated: Use GameitemMetaData.ABI instead.
var GameitemABI = GameitemMetaData.ABI

// GameitemBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use GameitemMetaData.Bin instead.
var GameitemBin = GameitemMetaData.Bin

// DeployGameitem deploys a new Ethereum contract, binding an instance of Gameitem to it.
func DeployGameitem(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Gameitem, error) {
	parsed, err := GameitemMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(GameitemBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Gameitem{GameitemCaller: GameitemCaller{contract: contract}, GameitemTransactor: GameitemTransactor{contract: contract}, GameitemFilterer: GameitemFilterer{contract: contract}}, nil
}

// Gameitem is an auto generated Go binding around an Ethereum contract.
type Gameitem struct {
	GameitemCaller     // Read-only binding to the contract
	GameitemTransactor // Write-only binding to the contract
	GameitemFilterer   // Log filterer for contract events
}

// GameitemCaller is an auto generated read-only Go binding around an Ethereum contract.
type GameitemCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GameitemTransactor is an auto generated write-only Go binding around an Ethereum contract.
type GameitemTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GameitemFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type GameitemFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GameitemSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type GameitemSession struct {
	Contract     *Gameitem         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// GameitemCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type GameitemCallerSession struct {
	Contract *GameitemCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// GameitemTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type GameitemTransactorSession struct {
	Contract     *GameitemTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// GameitemRaw is an auto generated low-level Go binding around an Ethereum contract.
type GameitemRaw struct {
	Contract *Gameitem // Generic contract binding to access the raw methods on
}

// GameitemCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type GameitemCallerRaw struct {
	Contract *GameitemCaller // Generic read-only contract binding to access the raw methods on
}

// GameitemTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type GameitemTransactorRaw struct {
	Contract *GameitemTransactor // Generic write-only contract binding to access the raw methods on
}

// NewGameitem creates a new instance of Gameitem, bound to a specific deployed contract.
func NewGameitem(address common.Address, backend bind.ContractBackend) (*Gameitem, error) {
	contract, err := bindGameitem(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Gameitem{GameitemCaller: GameitemCaller{contract: contract}, GameitemTransactor: GameitemTransactor{contract: contract}, GameitemFilterer: GameitemFilterer{contract: contract}}, nil
}

// NewGameitemCaller creates a new read-only instance of Gameitem, bound to a specific deployed contract.
func NewGameitemCaller(address common.Address, caller bind.ContractCaller) (*GameitemCaller, error) {
	contract, err := bindGameitem(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &GameitemCaller{contract: contract}, nil
}

// NewGameitemTransactor creates a new write-only instance of Gameitem, bound to a specific deployed contract.
func NewGameitemTransactor(address common.Address, transactor bind.ContractTransactor) (*GameitemTransactor, error) {
	contract, err := bindGameitem(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &GameitemTransactor{contract: contract}, nil
}

// NewGameitemFilterer creates a new log filterer instance of Gameitem, bound to a specific deployed contract.
func NewGameitemFilterer(address common.Address, filterer bind.ContractFilterer) (*GameitemFilterer, error) {
	contract, err := bindGameitem(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &GameitemFilterer{contract: contract}, nil
}

// bindGameitem binds a generic wrapper to an already deployed contract.
func bindGameitem(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(GameitemABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Gameitem *GameitemRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Gameitem.Contract.GameitemCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Gameitem *GameitemRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Gameitem.Contract.GameitemTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Gameitem *GameitemRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Gameitem.Contract.GameitemTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Gameitem *GameitemCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Gameitem.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Gameitem *GameitemTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Gameitem.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Gameitem *GameitemTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Gameitem.Contract.contract.Transact(opts, method, params...)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_Gameitem *GameitemCaller) BalanceOf(opts *bind.CallOpts, owner common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Gameitem.contract.Call(opts, &out, "balanceOf", owner)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_Gameitem *GameitemSession) BalanceOf(owner common.Address) (*big.Int, error) {
	return _Gameitem.Contract.BalanceOf(&_Gameitem.CallOpts, owner)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_Gameitem *GameitemCallerSession) BalanceOf(owner common.Address) (*big.Int, error) {
	return _Gameitem.Contract.BalanceOf(&_Gameitem.CallOpts, owner)
}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_Gameitem *GameitemCaller) GetApproved(opts *bind.CallOpts, tokenId *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Gameitem.contract.Call(opts, &out, "getApproved", tokenId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_Gameitem *GameitemSession) GetApproved(tokenId *big.Int) (common.Address, error) {
	return _Gameitem.Contract.GetApproved(&_Gameitem.CallOpts, tokenId)
}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_Gameitem *GameitemCallerSession) GetApproved(tokenId *big.Int) (common.Address, error) {
	return _Gameitem.Contract.GetApproved(&_Gameitem.CallOpts, tokenId)
}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_Gameitem *GameitemCaller) IsApprovedForAll(opts *bind.CallOpts, owner common.Address, operator common.Address) (bool, error) {
	var out []interface{}
	err := _Gameitem.contract.Call(opts, &out, "isApprovedForAll", owner, operator)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_Gameitem *GameitemSession) IsApprovedForAll(owner common.Address, operator common.Address) (bool, error) {
	return _Gameitem.Contract.IsApprovedForAll(&_Gameitem.CallOpts, owner, operator)
}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_Gameitem *GameitemCallerSession) IsApprovedForAll(owner common.Address, operator common.Address) (bool, error) {
	return _Gameitem.Contract.IsApprovedForAll(&_Gameitem.CallOpts, owner, operator)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Gameitem *GameitemCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Gameitem.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Gameitem *GameitemSession) Name() (string, error) {
	return _Gameitem.Contract.Name(&_Gameitem.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Gameitem *GameitemCallerSession) Name() (string, error) {
	return _Gameitem.Contract.Name(&_Gameitem.CallOpts)
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_Gameitem *GameitemCaller) OwnerOf(opts *bind.CallOpts, tokenId *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Gameitem.contract.Call(opts, &out, "ownerOf", tokenId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_Gameitem *GameitemSession) OwnerOf(tokenId *big.Int) (common.Address, error) {
	return _Gameitem.Contract.OwnerOf(&_Gameitem.CallOpts, tokenId)
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_Gameitem *GameitemCallerSession) OwnerOf(tokenId *big.Int) (common.Address, error) {
	return _Gameitem.Contract.OwnerOf(&_Gameitem.CallOpts, tokenId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Gameitem *GameitemCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _Gameitem.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Gameitem *GameitemSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Gameitem.Contract.SupportsInterface(&_Gameitem.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Gameitem *GameitemCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Gameitem.Contract.SupportsInterface(&_Gameitem.CallOpts, interfaceId)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Gameitem *GameitemCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Gameitem.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Gameitem *GameitemSession) Symbol() (string, error) {
	return _Gameitem.Contract.Symbol(&_Gameitem.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Gameitem *GameitemCallerSession) Symbol() (string, error) {
	return _Gameitem.Contract.Symbol(&_Gameitem.CallOpts)
}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_Gameitem *GameitemCaller) TokenURI(opts *bind.CallOpts, tokenId *big.Int) (string, error) {
	var out []interface{}
	err := _Gameitem.contract.Call(opts, &out, "tokenURI", tokenId)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_Gameitem *GameitemSession) TokenURI(tokenId *big.Int) (string, error) {
	return _Gameitem.Contract.TokenURI(&_Gameitem.CallOpts, tokenId)
}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_Gameitem *GameitemCallerSession) TokenURI(tokenId *big.Int) (string, error) {
	return _Gameitem.Contract.TokenURI(&_Gameitem.CallOpts, tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_Gameitem *GameitemTransactor) Approve(opts *bind.TransactOpts, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.contract.Transact(opts, "approve", to, tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_Gameitem *GameitemSession) Approve(to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.Contract.Approve(&_Gameitem.TransactOpts, to, tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_Gameitem *GameitemTransactorSession) Approve(to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.Contract.Approve(&_Gameitem.TransactOpts, to, tokenId)
}

// AwardItem is a paid mutator transaction binding the contract method 0xcf378343.
//
// Solidity: function awardItem(address player, string tokenURI) returns(uint256)
func (_Gameitem *GameitemTransactor) AwardItem(opts *bind.TransactOpts, player common.Address, tokenURI string) (*types.Transaction, error) {
	return _Gameitem.contract.Transact(opts, "awardItem", player, tokenURI)
}

// AwardItem is a paid mutator transaction binding the contract method 0xcf378343.
//
// Solidity: function awardItem(address player, string tokenURI) returns(uint256)
func (_Gameitem *GameitemSession) AwardItem(player common.Address, tokenURI string) (*types.Transaction, error) {
	return _Gameitem.Contract.AwardItem(&_Gameitem.TransactOpts, player, tokenURI)
}

// AwardItem is a paid mutator transaction binding the contract method 0xcf378343.
//
// Solidity: function awardItem(address player, string tokenURI) returns(uint256)
func (_Gameitem *GameitemTransactorSession) AwardItem(player common.Address, tokenURI string) (*types.Transaction, error) {
	return _Gameitem.Contract.AwardItem(&_Gameitem.TransactOpts, player, tokenURI)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_Gameitem *GameitemTransactor) SafeTransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.contract.Transact(opts, "safeTransferFrom", from, to, tokenId)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_Gameitem *GameitemSession) SafeTransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.Contract.SafeTransferFrom(&_Gameitem.TransactOpts, from, to, tokenId)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_Gameitem *GameitemTransactorSession) SafeTransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.Contract.SafeTransferFrom(&_Gameitem.TransactOpts, from, to, tokenId)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data) returns()
func (_Gameitem *GameitemTransactor) SafeTransferFrom0(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int, _data []byte) (*types.Transaction, error) {
	return _Gameitem.contract.Transact(opts, "safeTransferFrom0", from, to, tokenId, _data)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data) returns()
func (_Gameitem *GameitemSession) SafeTransferFrom0(from common.Address, to common.Address, tokenId *big.Int, _data []byte) (*types.Transaction, error) {
	return _Gameitem.Contract.SafeTransferFrom0(&_Gameitem.TransactOpts, from, to, tokenId, _data)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data) returns()
func (_Gameitem *GameitemTransactorSession) SafeTransferFrom0(from common.Address, to common.Address, tokenId *big.Int, _data []byte) (*types.Transaction, error) {
	return _Gameitem.Contract.SafeTransferFrom0(&_Gameitem.TransactOpts, from, to, tokenId, _data)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_Gameitem *GameitemTransactor) SetApprovalForAll(opts *bind.TransactOpts, operator common.Address, approved bool) (*types.Transaction, error) {
	return _Gameitem.contract.Transact(opts, "setApprovalForAll", operator, approved)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_Gameitem *GameitemSession) SetApprovalForAll(operator common.Address, approved bool) (*types.Transaction, error) {
	return _Gameitem.Contract.SetApprovalForAll(&_Gameitem.TransactOpts, operator, approved)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_Gameitem *GameitemTransactorSession) SetApprovalForAll(operator common.Address, approved bool) (*types.Transaction, error) {
	return _Gameitem.Contract.SetApprovalForAll(&_Gameitem.TransactOpts, operator, approved)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_Gameitem *GameitemTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.contract.Transact(opts, "transferFrom", from, to, tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_Gameitem *GameitemSession) TransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.Contract.TransferFrom(&_Gameitem.TransactOpts, from, to, tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_Gameitem *GameitemTransactorSession) TransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _Gameitem.Contract.TransferFrom(&_Gameitem.TransactOpts, from, to, tokenId)
}

// GameitemApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the Gameitem contract.
type GameitemApprovalIterator struct {
	Event *GameitemApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GameitemApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GameitemApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GameitemApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GameitemApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GameitemApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GameitemApproval represents a Approval event raised by the Gameitem contract.
type GameitemApproval struct {
	Owner    common.Address
	Approved common.Address
	TokenId  *big.Int
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_Gameitem *GameitemFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, approved []common.Address, tokenId []*big.Int) (*GameitemApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var approvedRule []interface{}
	for _, approvedItem := range approved {
		approvedRule = append(approvedRule, approvedItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _Gameitem.contract.FilterLogs(opts, "Approval", ownerRule, approvedRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return &GameitemApprovalIterator{contract: _Gameitem.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_Gameitem *GameitemFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *GameitemApproval, owner []common.Address, approved []common.Address, tokenId []*big.Int) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var approvedRule []interface{}
	for _, approvedItem := range approved {
		approvedRule = append(approvedRule, approvedItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _Gameitem.contract.WatchLogs(opts, "Approval", ownerRule, approvedRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GameitemApproval)
				if err := _Gameitem.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_Gameitem *GameitemFilterer) ParseApproval(log types.Log) (*GameitemApproval, error) {
	event := new(GameitemApproval)
	if err := _Gameitem.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// GameitemApprovalForAllIterator is returned from FilterApprovalForAll and is used to iterate over the raw logs and unpacked data for ApprovalForAll events raised by the Gameitem contract.
type GameitemApprovalForAllIterator struct {
	Event *GameitemApprovalForAll // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GameitemApprovalForAllIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GameitemApprovalForAll)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GameitemApprovalForAll)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GameitemApprovalForAllIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GameitemApprovalForAllIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GameitemApprovalForAll represents a ApprovalForAll event raised by the Gameitem contract.
type GameitemApprovalForAll struct {
	Owner    common.Address
	Operator common.Address
	Approved bool
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterApprovalForAll is a free log retrieval operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_Gameitem *GameitemFilterer) FilterApprovalForAll(opts *bind.FilterOpts, owner []common.Address, operator []common.Address) (*GameitemApprovalForAllIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _Gameitem.contract.FilterLogs(opts, "ApprovalForAll", ownerRule, operatorRule)
	if err != nil {
		return nil, err
	}
	return &GameitemApprovalForAllIterator{contract: _Gameitem.contract, event: "ApprovalForAll", logs: logs, sub: sub}, nil
}

// WatchApprovalForAll is a free log subscription operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_Gameitem *GameitemFilterer) WatchApprovalForAll(opts *bind.WatchOpts, sink chan<- *GameitemApprovalForAll, owner []common.Address, operator []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _Gameitem.contract.WatchLogs(opts, "ApprovalForAll", ownerRule, operatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GameitemApprovalForAll)
				if err := _Gameitem.contract.UnpackLog(event, "ApprovalForAll", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApprovalForAll is a log parse operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_Gameitem *GameitemFilterer) ParseApprovalForAll(log types.Log) (*GameitemApprovalForAll, error) {
	event := new(GameitemApprovalForAll)
	if err := _Gameitem.contract.UnpackLog(event, "ApprovalForAll", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// GameitemTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Gameitem contract.
type GameitemTransferIterator struct {
	Event *GameitemTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GameitemTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GameitemTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GameitemTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GameitemTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GameitemTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GameitemTransfer represents a Transfer event raised by the Gameitem contract.
type GameitemTransfer struct {
	From    common.Address
	To      common.Address
	TokenId *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_Gameitem *GameitemFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address, tokenId []*big.Int) (*GameitemTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _Gameitem.contract.FilterLogs(opts, "Transfer", fromRule, toRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return &GameitemTransferIterator{contract: _Gameitem.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_Gameitem *GameitemFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *GameitemTransfer, from []common.Address, to []common.Address, tokenId []*big.Int) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _Gameitem.contract.WatchLogs(opts, "Transfer", fromRule, toRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GameitemTransfer)
				if err := _Gameitem.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_Gameitem *GameitemFilterer) ParseTransfer(log types.Log) (*GameitemTransfer, error) {
	event := new(GameitemTransfer)
	if err := _Gameitem.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
